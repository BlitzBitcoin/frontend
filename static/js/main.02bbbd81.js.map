{"version":3,"file":"static/js/main.02bbbd81.js","mappings":"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","sources":["components/atoms/WalletButton.tsx","components/molecules/PasswordInput.tsx","hooks/queryKeys.tsx","hooks/useWallet.tsx","stores/useWalletStore.tsx","pages/LoginPage.tsx","utils/ConversionUtils.tsx","pages/WalletDefaultPage.tsx","components/organisms/WalletDataTable.tsx","components/molecules/SendReceiveLockButtons.tsx","pages/WalletTransactionsPage.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { TouchableOpacity, Text, StyleSheet } from 'react-native';\n\n/*\n+------------------------+\n|       WalletButton     |\n+------------------------+\n*/\nconst WalletButton = ({ handleOnPress = () => {}, buttonText }) => (\n    <TouchableOpacity style={styles.submitButton} onPress={handleOnPress}>\n      <Text style={styles.getKeyButtonText}>{buttonText}</Text>\n    </TouchableOpacity>\n  );\n\nconst borderColor = '#000';\nconst styles = StyleSheet.create({\n    submitButton: {\n        backgroundColor: '#007BFF',\n        padding: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 5,\n        marginHorizontal: 1, // add some horizontal margin to the buttons\n        marginBottom: 5\n    },\n    getKeyButtonText: {\n      color: '#fff',\n      fontWeight: 'bold'\n    }\n});\n\nexport default WalletButton;","import React from 'react';\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet } from 'react-native';\n\nimport WalletButton from '../atoms/WalletButton';\n\n/*\n+--------------------------------------+\n|  +-------------------------------+   |\n|  |   Password                    |   |\n|  +-------------------------------+   |\n|  +-----------------------------+     |\n|  |    Unlock Wallet            |     |\n|  +-----------------------------+     |\n|  +-------------------------------+   |\n|  |   Error message (if any)     |    |\n|  +-------------------------------+   |\n+--------------------------------------+\n*/\nconst PasswordInput = ({\n  inputPassword,\n  handleInputPassword,\n  handleUnlockWallet,\n  displayError,\n  error,\n}) => (\n  <View>\n    <TextInput\n      style={styles.input}\n      placeholder=\"Password\"\n      secureTextEntry={true}\n      onChangeText={handleInputPassword}\n      value={inputPassword}\n    />\n   <WalletButton\n      handleOnPress={handleUnlockWallet}\n      buttonText=\"Unlock Wallet\"\n   />\n    <Text style={styles.errorText}>{displayError && error ? error.message : ''}</Text>\n  </View>\n);\nconst borderColor = '#000';\nconst styles = StyleSheet.create({\n    input: {\n      borderWidth: 1,\n      borderColor: borderColor,\n      padding: 10,\n      width: '100%',\n      marginBottom: 10,\n    },\n    errorText: {\n      color: 'red',\n      marginTop: 10,\n    },\n});\n\nexport default PasswordInput;","/* https://tkdodo.eu/blog/effective-react-query-keys#use-query-key-factories\nManually declaring the Query Keys is not only error-prone, but makes changes harder in the future.\nHave one Query Key factory per feature. It's  a simple object with entries and functions \nthat will produce query keys.\n*/\n\nexport const walletKeys = {\n    all: () => [\"wallet\"],\n    single: (\n        password: string,\n        timestamp: number\n    ) => [...walletKeys.all(), password, timestamp],  // FIXME: should rely on \"id\" instead of \"password\"\n};\n","import { useState, useEffect } from 'react';\nimport { useQuery, UseQueryResult, useQueryClient } from \"@tanstack/react-query\";\nimport CryptoJS from 'crypto-js';\n\nimport { walletKeys } from \"./queryKeys\";\n\ninterface Transaction {\n  tx_hash: string;\n  final_balance: number;\n  total_received: number;\n  timestamp: string;\n}\n\nexport interface Wallet {\n  userId: string;\n  xpub: string;\n  xprivEncrypted: string;\n  transactions?: Transaction[];\n}\n\nexport const useWallet = (\n  {\n    password = '',\n    enabledState = false,\n    timestamp = 0\n  }:\n  {\n    password?: string,\n    enabledState?: boolean,\n    timestamp?: number\n  }): UseQueryResult<Wallet, Error> => {\n\n    return useQuery({\n      queryKey: walletKeys.single(password, timestamp),\n      queryFn: () => fetchWallet(password, timestamp),\n      enabled: enabledState,\n      retry: false,\n    });\n};\n\nconst fetchWallet = async (password: string, timestamp:number): Promise<Wallet> => {\n  console.log('im fetching wallet!', timestamp)\n  // ----- Mocked fetch logic ---------------------------------------------\n  let defaultWallet: Wallet = {\n      userId: \"user1\",\n      xpub: \"user1_xpub\",\n      xprivEncrypted: \"U2FsdGVkX184moMXYzj0KA24KCKWJbrQU5BHg0IiJvLThe4Ko9agGltcLtSndv58zf5AbRClIfDr0GV9jZpH3Xf0CVLcZqpuzuOCcltO7kA\",\n      transactions: [\n      {\n          tx_hash: \"tx_hash1\",\n          final_balance: 1.5,\n          total_received: 1,\n          timestamp: \"Sun May 14 2023 20:25:19 GMT-0400 (Eastern Daylight Time)\"\n      },\n      {\n          tx_hash: \"tx_hash2\",\n          final_balance: 0.5,\n          total_received: 0.5,\n          timestamp: \"Sun May 13 2023 18:05:19 GMT-0400 (Eastern Daylight Time)\"\n      }\n      ]\n  };\n  const decryptedKey = decryptWithAES(\n    (defaultWallet as Wallet).xprivEncrypted, password\n  );\n  if (!decryptedKey) {\n    throw new Error(\"Decryption failed. Check your password and try again.\");\n  }\n  return defaultWallet;\n  // ----- Mocked fetch logic ---------------------------------------------\n};\n\nfunction decryptWithAES(payload: string, password: string): string {\n  const bytes = CryptoJS.AES.decrypt(payload, password);\n  const decryptedPayload = bytes.toString(CryptoJS.enc.Utf8);\n  return decryptedPayload;\n}\n","import { create } from \"zustand\";\n\ninterface WalletStore {\n  password: string;\n  setPassword: (password: string) => void;\n  passwordSubmitTimestamp: number;\n  setPasswordSubmitTimestamp: (timestamp: number) => void;\n  hasSubmittedPassword: boolean;\n  setHasPasswordSubmitted: (submitted: boolean) => void;\n}\n\n/*  TODO:\n    This store was created to make state lifting not required in WalletDataTable.tsx\n    But it's possible that route was not optimal to begin with -- revisit\n*/\nconst useWalletStore = create<WalletStore>((set) => ({\n  password: '',\n  setPassword: (password) => set({ password }),\n  passwordSubmitTimestamp: 0,\n  setPasswordSubmitTimestamp: (passwordSubmitTimestamp) => set({ passwordSubmitTimestamp }),\n  hasSubmittedPassword: false,\n  setHasPasswordSubmitted: (hasSubmittedPassword) => set({ hasSubmittedPassword }),\n}));\n\nexport default useWalletStore;","import React, { useState, useEffect } from 'react';\n\nimport PasswordInput from '../components/molecules/PasswordInput';\n\nimport { useWallet } from '../hooks/useWallet';\nimport useWalletStore from '../stores/useWalletStore';\n\n/*\n|-----------------------------|\n|      PasswordInput          |\n|   ---------------------     |\n|   |                   |     |\n|   |  Password         |     |\n|   |                   |     |\n|   ---------------------     |\n|   ---------------------     |\n|   | Unlock Wallet     |     |\n|   ---------------------     |\n|-----------------------------|\n*/\nconst LoginPage = ({\n  navigation,\n  navigationName,\n}) => {\n  const { \n    password,\n    setPassword,\n    hasSubmittedPassword,\n    setHasPasswordSubmitted,\n    passwordSubmitTimestamp,\n    setPasswordSubmitTimestamp\n  } = useWalletStore();\n  const [inputPassword, setInputPassword] = useState('');\n  const [displayError, setDisplayError] = useState(false);\n\n  const { data: wallet, error } = useWallet({\n    password: password,\n    enabledState: hasSubmittedPassword,\n    timestamp: passwordSubmitTimestamp\n  });\n\n  useEffect(() => {\n    if (wallet) {\n      console.log('(effect) UNLOCKING WALLET', wallet);\n      setDisplayError(false);\n      navigation.navigate(navigationName);\n    } else if (hasSubmittedPassword) {\n      console.log('(effect) LOCKING WALLET', wallet);\n      setHasPasswordSubmitted(false);\n      setDisplayError(true);\n    }\n    setInputPassword('');\n  }, [wallet, hasSubmittedPassword]);\n\n  const handleInputPassword = (text) => {\n    setInputPassword(text);\n    setDisplayError(false);\n  };\n\n  const handleUnlockWallet = () => {\n    setHasPasswordSubmitted(true);\n    setPassword(inputPassword);\n    setPasswordSubmitTimestamp(Date.now());\n  };\n\n  return (\n    <PasswordInput\n        inputPassword={inputPassword}\n        handleInputPassword={handleInputPassword}\n        handleUnlockWallet={handleUnlockWallet}\n        displayError={displayError}\n        error={error}\n    />\n  );\n};\n\nexport default LoginPage;\n","export const convertBTCFIAT = (balance: number) => {\n    return balance * 36396.02; //live conversion later?\n  }","import React from \"react\";\nimport { TouchableOpacity} from 'react-native';\n\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { View, Text } from \"react-native\";\nimport { StyleSheet } from \"react-native\";\n\nimport { Wallet } from \"../hooks/useWallet\";\nimport { walletKeys } from \"../hooks/queryKeys\";\nimport useWalletStore from \"../stores/useWalletStore\";\n\nimport { convertBTCFIAT } from \"../utils/ConversionUtils\";\n\n/*\n---------------------------------------\n|         WalletDefaultPage           |\n|        -------------------          |\n|        |                 |          |\n|        | $<balance>      |          |\n|        |                 |          |\n|        -------------------          |\n|        -------------------          |\n|        |                 |          |\n|        | (Last Transaction: <latest_txn> BTC)  |\n|        |                 |          |\n|        -------------------          |\n---------------------------------------\n*/\nconst WalletDefaultPage = ({\n    navigation,\n    navigationName\n}) => {\n  const queryClient = useQueryClient();\n  const { password, passwordSubmitTimestamp } = useWalletStore();\n  const wallet: Wallet = queryClient.getQueryData(\n    walletKeys.single(password, passwordSubmitTimestamp)\n  );\n  const balance = convertBTCFIAT(wallet.transactions[0].final_balance);\n  const latest_txn = wallet.transactions[0].total_received;\n\n  return (\n    <TouchableOpacity\n      style={styles.pageContainer}\n      activeOpacity={1}\n      onPress={() => navigation.navigate(navigationName)}\n    >\n      <View>\n        <Text style={styles.balance}> {`$${balance}`} </Text>\n        <Text style={styles.latest_transaction}> {`(Last Transaction: ${latest_txn} BTC)`} </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  balance: {\n    color: \"#5DB075\",\n    fontFamily: \"rag\",\n    fontSize: 30,\n  },\n  latest_transaction: {\n    fontFamily: \"rag\",\n    fontSize: 10,\n  },\n});\n\nexport default WalletDefaultPage;\n","import React from 'react';\nimport { useQueryClient } from \"@tanstack/react-query\";\nimport { StyleSheet } from 'react-native';\nimport { DataTable, Text } from 'react-native-paper';\n\nimport { walletKeys } from '../../hooks/queryKeys';\nimport { Wallet } from '../../hooks/useWallet';\nimport useWalletStore from '../../stores/useWalletStore';\n\n/*\n+----------------------------------------------------------------------------------+\n|    Address            Balance              Transactions                          |\n|                                                                                  |\n|    xpub_value         final_balance_value  transactions_length                   |\n+----------------------------------------------------------------------------------+\n*/\nconst WalletDataTable = () => {\n  const queryClient = useQueryClient();\n  const { password, passwordSubmitTimestamp } = useWalletStore();\n  const wallet: Wallet = queryClient.getQueryData(\n    walletKeys.single(password, passwordSubmitTimestamp)\n  );\n  if (!wallet) {\n      return null;\n  }\n  return (\n    <DataTable style={styles.table}>\n      <DataTable.Header>\n        <DataTable.Title textStyle={styles.subtext}>Address</DataTable.Title>\n        <DataTable.Title textStyle={styles.subtext}>Balance</DataTable.Title>\n        <DataTable.Title textStyle={styles.subtext}>Transactions</DataTable.Title>\n        {/* <DataTable.Title textStyle={styles.subtext}>Total Received</DataTable.Title> */}\n        {/* <DataTable.Title textStyle={styles.subtext}>Private Key</DataTable.Title> */}\n      </DataTable.Header>\n      <DataTable.Row>\n        {/* for loop to index the transactions? */}\n        <DataTable.Cell textStyle={styles.subtext}>{wallet.xpub}</DataTable.Cell>\n        <DataTable.Cell textStyle={styles.subtext}>{wallet.transactions[0].final_balance}</DataTable.Cell>\n        <DataTable.Cell textStyle={styles.subtext}>{wallet.transactions.length}</DataTable.Cell>\n        {/* <DataTable.Cell textStyle={styles.subtext}>{wallet.transactions.total_received}</DataTable.Cell> */}\n        {/* <DataTable.Cell textStyle={styles.subtext}>{wallet.private_key}</DataTable.Cell> */}\n      </DataTable.Row>\n    </DataTable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  table: {\n    borderWidth: 1,\n    borderColor: '#000',\n    width: '80%',\n  },\n  subtext: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    marginBottom: 15,\n    color: '#000',\n  },\n});\n\nexport default WalletDataTable;","import { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\n\nimport WalletButton from '../atoms/WalletButton';\n\n/*\n+-----------------------------------------------------------+\n|  +---------+     +---------+      +---------+             |\n|  |  Send   |     | Receive |      |  Lock   |             |\n|  +---------+     +---------+      +---------+             |\n+-----------------------------------------------------------+\n*/\nconst SendReceiveLockButtons = ({ handleLockWallet }) => (\n    <View style={styles.buttonsContainer}>\n      <WalletButton buttonText=\"Send\"/>\n      <WalletButton buttonText=\"Receive\"/>\n      <WalletButton buttonText=\"Lock\" handleOnPress={handleLockWallet}/>\n    </View>\n  );\n\nconst borderColor = '#000';\nconst styles = StyleSheet.create({\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly', // add more horizontal spacing\n    alignItems: 'center', // center the buttons vertically\n    marginHorizontal: 20 // add some horizontal margin to the container\n  }       \n});\n\nexport default SendReceiveLockButtons;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport WalletDataTable from '../components/organisms/WalletDataTable';\nimport SendReceiveLockButtons from '../components/molecules/SendReceiveLockButtons';\n\nimport useWalletStore from '../stores/useWalletStore';\n\n/*\n---------------------------------------\n|      WalletTransactionsPage         |\n|        ---------------------        |\n|        | WalletDataTable   |        |\n|        |                   |        |\n|        |-------------------|        |\n|        | ...               |        |\n|        ---------------------        |\n|        ---------------------        |\n|        | Send  | Receive | Lock  |  |\n|        ---------------------        |\n---------------------------------------\n*/\nconst WalletTransactionsPage = ({\n    navigation,\n    navigationName\n}) => {\n    const { setHasPasswordSubmitted, setPasswordSubmitTimestamp } = useWalletStore();\n    // FIXME: handleLockWallet causes LoginPage to re-render twice? (logs twice)\n    const handleLockWallet = () => {\n        setHasPasswordSubmitted(false);\n        setPasswordSubmitTimestamp(Date.now()); // this is only to invalidate \"wallet\"?\n        navigation.navigate(navigationName);\n    };\n    return (\n        <View style={styles.pageContainer}>\n            <WalletDataTable />\n            <SendReceiveLockButtons handleLockWallet={handleLockWallet} />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n  pageContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default WalletTransactionsPage;\n","import { QueryClientProvider } from \"@tanstack/react-query\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport React, { useState } from \"react\";\n\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { StyleSheet } from \"react-native\";\nimport {\n  MD3DarkTheme,\n  Provider as PaperProvider,\n} from \"react-native-paper\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport WalletDefaultPage from \"./pages/WalletDefaultPage\";\nimport WalletTransactionsPage from \"./pages/WalletTransactionsPage\";\n\n// Warning: Keep queryClient out of App() so its same instance when App() re-renders\nconst queryClient = new QueryClient();\nconst Stack = createStackNavigator();\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SafeAreaProvider>\n        <PaperProvider theme={MD3DarkTheme}>\n          <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"LoginPage\">\n              <Stack.Screen\n                name=\"LoginPage\"\n                options={{ headerShown: false }}\n              >\n                {/*\n                  CodeStyle: *Drill Down Nav Props* instead of organisms & below\n                  having them -- so it's obvious where navigation is coming from \n                */}\n                {(props) => (\n                  <LoginPage\n                    {...props}\n                    navigation={props.navigation} // *Drill Down Nav Props*\n                    navigationName=\"WalletDefaultPage\"\n                  />\n                )}\n              </Stack.Screen>\n              <Stack.Screen\n                name=\"WalletDefaultPage\"\n                options={{ headerShown: false }}\n              >\n                {(props) => (\n                  <WalletDefaultPage\n                    {...props}\n                    navigation={props.navigation} // *Drill Down Nav Props*\n                    navigationName=\"WalletTransactionsPage\"\n                  />\n                )}\n              </Stack.Screen>\n              {/* FIXME: WalletDataTable complaining about useNativeDriver / RTC animation warnings */}\n              <Stack.Screen\n                name=\"WalletTransactionsPage\"\n                options={{ headerShown: false }}\n              >\n                {(props) => (\n                  <WalletTransactionsPage\n                    {...props}\n                    navigation={props.navigation} // *Drill Down Nav Props*\n                    navigationName=\"LoginPage\"\n                  />\n                )}\n              </Stack.Screen>\n            </Stack.Navigator>\n          </NavigationContainer>\n        </PaperProvider>\n      </SafeAreaProvider>\n    </QueryClientProvider>\n  );\n}\n// const borderColor = '#000';\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // backgroundColor: '#fff',\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  }\n});\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/frontend/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","submitButton","backgroundColor","padding","alignItems","justifyContent","borderRadius","marginHorizontal","marginBottom","getKeyButtonText","color","fontWeight","_ref","_ref$handleOnPress","handleOnPress","buttonText","_jsx","TouchableOpacity","style","onPress","children","Text","input","borderWidth","borderColor","width","errorText","marginTop","inputPassword","handleInputPassword","handleUnlockWallet","displayError","error","_jsxs","View","TextInput","placeholder","secureTextEntry","onChangeText","value","WalletButton","message","walletKeys","all","single","password","timestamp","concat","_toConsumableArray","fetchWallet","_ref2","_asyncToGenerator","console","log","defaultWallet","userId","xpub","xprivEncrypted","transactions","tx_hash","final_balance","total_received","decryptedKey","payload","bytes","CryptoJS","toString","decryptWithAES","Error","_x","_x2","apply","arguments","create","set","setPassword","passwordSubmitTimestamp","setPasswordSubmitTimestamp","hasSubmittedPassword","setHasPasswordSubmitted","navigation","navigationName","_useWalletStore","useWalletStore","_useState","useState","_useState2","_slicedToArray","setInputPassword","_useState3","_useState4","setDisplayError","_useWallet","_ref$password","_ref$enabledState","enabledState","_ref$timestamp","useQuery","queryKey","queryFn","enabled","retry","useWallet","wallet","data","useEffect","navigate","PasswordInput","text","Date","now","pageContainer","flex","balance","fontFamily","fontSize","latest_transaction","queryClient","useQueryClient","getQueryData","convertBTCFIAT","latest_txn","activeOpacity","table","subtext","fontStyle","DataTable","textStyle","length","buttonsContainer","flexDirection","handleLockWallet","WalletDataTable","SendReceiveLockButtons","QueryClient","Stack","createStackNavigator","container","flexGrow","header","QueryClientProvider","client","SafeAreaProvider","PaperProvider","theme","MD3DarkTheme","NavigationContainer","Navigator","initialRouteName","Screen","name","options","headerShown","props","LoginPage","_objectSpread","WalletDefaultPage","WalletTransactionsPage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}